name: nodeapp

on:                         # Specifies the events that will trigger the workflow
  workflow_dispatch:
  push:
    branches: [ master ]    # in our case it's a push to a master branch

jobs:                       # Defines the jobs that the workflow will execute
  deploy:
    strategy:
      matrix:               # it's like templates in c++
        node-version: [ 18.x ]  # and we parametrize it with specific nodejs version

    runs-on: ubuntu-latest  # Specifies that the job should run on latest ubuntu
    steps:                  # Specifies concrete steps that should be executed as part of the job
      - uses: actions/checkout@v3       # Checks out the repository code for the job
      - name: Set up Node.js            
        uses: actions/setup-node@v2     # Sets up the specified version of Node.js for the job
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run super-linter          # Runs a linter (!) to check the code in the repository
        uses: github/super-linter@v4
        env:                            # Logs in to Github and Docker Hub using the specified username and password secrets.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JAVASCRIPT_ES: true
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx      # It's a plugin for multi-architecture builds
        uses: docker/setup-buildx-action@v2

      - name: Build and push to DockerHub            # Build and push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}
      - name: Download and run image (port 3000)
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}
        run: |
          docker pull $DOCKER_USERNAME/$DOCKERHUB_REPO
          docker run --name app-container -p 3000:3000 -d --cpus=1 --memory=512m $DOCKER_USERNAME/$DOCKERHUB_REPO
          sleep 15
          curl -f http://localhost:3000/
